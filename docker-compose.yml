version: "3.8"

services:
  postgres:
    container_name: "${APP_NAME}-db"
    image: postgres:16
    environment:
      POSTGRES_DB: ${APP_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - ~/db/data/${APP_NAME}-postgres:/var/lib/postgresql/data

  backend:
    container_name: "${APP_NAME}-backend"
    image: dayrim/chatwithrepo-backend:latest
    environment:
      BACKEND_PORT: ${BACKEND_PORT}
      APP_ENV: production
      APP_NAME: ${APP_NAME}
      AUTH_SECRET: ${AUTH_SECRET}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      POSTGRESQL_CONNECTION: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${APP_NAME}
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      - postgres
  web:
    container_name: "${APP_NAME}-web"
    image: dayrim/chatwithrepo-web:latest
    environment:
      PORT: ${PORT}
      NEXT_PUBLIC_MIXPANEL_PROJECT_TOKEN: ${NEXT_PUBLIC_MIXPANEL_PROJECT_TOKEN}
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
      NEXT_PUBLIC_GEMINI_API_KEY: ${NEXT_PUBLIC_GEMINI_API_KEY}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
    ports:
      - "${PORT}:${PORT}"
    depends_on:
      - postgres
